install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
require(tidyverse)
require(tidyverse)
require(DescTools)
require(car)
require(lmtest)
require(stargazer)
require(ggplot2)
require(plm)
require(FE)
install.packages("DescTools")
install.packages("DescTools")require(tidyverse)
install.packages("DescTools")
install.packages("car")
install.packages("lmtest")
install.packages("stargazer")
install.packages("ggplot2")
install.packages("plm")
#This function is provided with an integer and it returns if the integer is prime or not.
is_prime <- function(num) {
if (num == 2) {
return (TRUE)
} else if (any(num %% 2:(num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
#we are creating a list of numbers between 2 and 1000, which will be used afterwards
potential_prime_numbers<-seq(2,999)
#a sum variable which will store the sum of all prime numbers
sum_of_all_prime_in_range=0
# a for loop which will loop on all numbers between 2 and 1000 and check if any number is prime, prime numbers will be added in the sum variable
for(number in potential_prime_numbers){
#if number is prime, add that number in sum variable
if(is_prime(number)==TRUE){
sum_of_all_prime_in_range=  sum_of_all_prime_in_range+number
}
}
#Print the sum of all prime numbers in range.
print(sum_of_all_prime_in_range)
source("~/.active-rstudio-document")
rm(list = ls())
#This function is provided with an integer and it returns if the integer is prime or not.
is_prime <- function(num) {
if (num == 2) {
return (TRUE)
} else if (any(num %% 2:(num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
potential_prime_numbers<-seq(2,999)
#a sum variable which will store the sum of all prime numbers
sum_of_all_prime_in_range=0
for(number in potential_prime_numbers){
#if number is prime, add that number in sum variable
if(is_prime(number)==TRUE){
sum_of_all_prime_in_range=  sum_of_all_prime_in_range+number
}
}
#Print the sum of all prime numbers in range.
print(sum_of_all_prime_in_range)
knitr::stitch('Mappeeval2.R')
knitr::stitch('Mappeeval2.R')
rm(list = ls())
require(tidyverse)
install.packages("tidyverse")
require(tidyverse)
require(tidyverse)
#Henter data fra Bertn Ødegårs nettside, dataen er laget slik at man kan hente den direkte
#fra url
avkastningstr <- read_csv("https://ba-odegaard.no/financial_data/ose_asset_pricing_data/equity_size_portfolios_monthly_vw.txt")
rm(list = ls())
library(plotly)
library(tidyquant)
library(tidyverse)
library(fs)
library(lubridate)
library(dplyr)
library(zoo)
library(tidyr)
library(scales)
library(PerformanceAnalytics)
library(tictoc)
library(tidyverse)
library(dplyr)
library(data.table)
library(DescTools)
library(lmtest)
library(stargazer)
library(quantmod)
library(readxl)
data <- data.frame(Age = c(21, 20, 17,20,  12, 13, 15,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
Class = factor(c(1, 2, 1, 1, 2, 2, 1, 2), labels = c("1st", "2nd")))
View(data)
data <- data.frame(Age = c(21, 20, 17,20,  12, 13, 15,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no") labels = c("1st", "2nd")))
data <- data.frame(Age = c(21, 20, 17,20,  12, 13, 15,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no"), labels = c("1st", "2nd")))
data <- data.frame(Age = c(21, 20, 17,20,  12, 13, 15,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("1st", "2nd")))
View(data)
data <- data.frame(Age = c(21, 20, 17,20,  12, 13, 15,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
View(data)
Women40 <- data[gender == "female", age >= 40, religion=="yes" ]
Women40 <- data[gender == "female", Age >= 40, religion=="yes" ]
women40 <- data %>%
select(gender == "female", Age >= 40, relgion="yes")
View(data)
women40 <- data %>%
select(Gender == "female", Age >= 40, relgion="yes")
View(data)
head(data)
women40 <- data %>%
select(Gender == "female", Age >= 40, religon="yes")
women40 <- subset(data, gender = "female", age > 40, religon="yes" )
women40 <- subset(data, Gender = "female", aAe > 40, religon="yes" )
women40 <- subset(data, Gender = "female", Age > 40, religon="yes" )
View(women40)
women40 <- data %>%
select(Gender == "female", Age >= 40, religon="yes")
women40 <- data %>%
Mutate(Gender == "female", Age >= 40, religon="yes")
library(plotly)
library(tidyquant)
library(tidyverse)
library(fs)
library(lubridate)
library(dplyr)
library(zoo)
library(tidyr)
library(scales)
library(PerformanceAnalytics)
library(tictoc)
library(tidyverse)
library(dplyr)
library(data.table)
library(DescTools)
library(lmtest)
library(stargazer)
library(quantmod)
library(readxl)
women40 <- data %>%
mutate(Gender == "female", Age >= 40, religon="yes")
View(women40)
View(women40)
Women40 <- data[Gender == "female", Age >= 40, religion=="yes" ]
Women40 <- data[data$Gender == "female", data$Age >= 40, data$religion=="yes" ]
View(data)
Women40 <- data[data$Gender == "female", data$Age >= 40, data$religion=="yes" ]
Women40 <- data$Gender == "female", data$Age >= 40, data$religion=="yes"
Women40 <- c(data$Gender == "female", data$Age >= 40, data$religion=="yes")
Women40 <- data_frame(data$Gender == "female", data$Age >= 40, data$religion=="yes")
Women401 <- data_frame(data$Gender == "female", data$Age >= 40, data$religion=="yes")
women40 <- data %>%
subset(Gender == "female", Age >= 40, religon="yes")
View(women40)
women401 <- data %>%
subset(Gender == "female", Age >= 40, religon="yes")
women401 <- data %>%
select(Gender == "female", Age >= 40, religon="yes")
women41 <- subset(data, Gender = "female")
View(women41)
women41 <- subset(data, Gender =="Female")
View(women41)
women401 <- data %>%
select(Gender == "Female", Age >= 40, religon="yes")
women41 <- subset(data, Gender =="Female", Age >= 40, religion=="yes")
data
women41 <- subset(data, Gender =="Female", Age >= 40, religon=="yes")
women41 <- subset(data, Gender =="Female",
Age >= 40,
religon=="yes")
data
women41 <- subset(data, Gender =="Female",
Age >= 40,
religon =="yes")
women41 <- subset(data, Gender =="Female",
Age >= 40,
religon =="yes")
# Eksamen 2020 FIE425
rm(list=ls())
data <- data.frame(Age = c(44, 20, 17,20,  60, 13, 90,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
View(data)
women41 <- subset(data, Gender =="Female",
Age >= 40,
religon =="yes")
women41 <- subset(data, Gender =="Female",
Age >= 40)
View(women41)
View(data)
women41 <- data_frame(data, Gender =="Female",
Age >= 40)
View(women41)
View(data)
women401 <- data %>%
mutate(Female = "Female", Age >= 40, religon="yes")
View(women41)
womenove40 <- subset(data, Age = Age > 40, Gender = Gender =="female")
View(womenove40)
Womenover40 <- data %>%
filter(Age > 40 & Gender =="female")
View(Womenover40)
Womenover40 <- data %>%
filter(Age>40 & Gender =="female")
Womenover40 <- data %>%
filter(Age>40, Gender =="female")
Womenover401 <- data %>%
filter(Age>40, Gender =="female")
filter(Age>40()
Womenover401 <- data %>%
filter(Age>40)
View(data)
Womenover401 <- data %>%
filter(Age>40 | Gender="female")
Womenover401 <- data %>%
filter(Age>40 | Gender=="female")
View(Womenover401)
women400 <- subset(data, Age>=40 |Gender=="female")
View(women400)
women400 <- subset(data, Age>=40 |Gender=="Female" | religon == "yes")
View(women400)
women400 <- subset(data, Age>=40 |Gender=="Female")
View(women400)
w <- subset(data, Age>40 |Gender=="Female")
View(w)
w <- subset(data, Age>40 & Gender=="Female")
View(w)
w <- subset(data, Age>=40 & Gender=="Female" & relgion="yes")
w <- subset(data, Age>=40 & Gender=="Female" & relgion=="yes")
View(data)
w <- subset(data, Age>=40 & Gender=="Female" & religon=="yes")
View(w)
w <- subset(data, Age>=40 && Gender=="Female" && religon=="yes")
w <- subset(data, Age>=40 && Gender=="Female")
w <- subset(data, Age>=40 & Gender=="Female")
View(w)
w <- subset(data, Age=>40 & Gender=="Female")
w <- subset(data, Age>=40 & Gender=="Female")
w <- subset(data, Age>=40 & Gender=="Female" & religon =="yes")
data <- data.frame(Age = c(44, 20, 17,20,  60, 13, 90,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "yes","yes", "yes","yes", "yes","yes", "yes"), labels = c("yes", "no")))
data <- data.frame(Age = c(44, 20, 17,20,  60, 13, 90,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c(1, 1, 1, 1, 1, 1, 1, 1), labels = c("yes", "no")))
data <- data.frame(Age = c(44, 20, 17,20,  60, 13, 90,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c(1, 1, 1, 1, 1, 1, 1, 1), labels = c("yes", "no")))
data <- data.frame(Age = c(44, 20, 17,20,  60, 13, 90,16),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
data <- data.frame(Age = c(44, 50, 90,46,  60, 99, 90,41),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
w <- subset(data, Age>=40 & Gender=="Female" & religon ="yes")
# Eksamen 2020 FIE425
rm(list=ls())
data <- data.frame(Age = c(44, 50, 90,46,  60, 99, 90,41),
Gender = factor(c(2, 2, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
w <- subset(data, Age>=40 & Gender=="Female" & religon =="yes")
View(w)
View(data)
data <- data.frame(Age = c(44, 50, 90,46,  60, 99, 90,41),
Gender = factor(c(1, 1, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
data <- data.frame(Age = c(44, 50, 90,46,  60, 99, 90,41),
Gender = factor(c(1, 1, 1, 2, 1, 2, 1, 1), labels = c("Female", "Male")),
religon = factor(c("yes", "no","yes", "no","yes", "no","yes", "no"), labels = c("yes", "no")))
w <- subset(data, Age>=40 & Gender=="Female" & religon =="yes")
View(w)
View(data)
View(w)
View(data)
#R code (can be used to solve Ex 3 a)
##Function
##Simulates n paths wth dt=h
simulateS < − function(S0, r, sigma, h, T, n) {
t < − seq(h, T, by = h)
## No of points in each path
m < − length(t)
e < − matrix(exp((r - 0.5 * sigmaˆ2) * h + sigma * sqrt(h) *rnorm(n * m)), m, n)
S < − apply(e, 2, cumprod)
S < − S * S0
S < − rbind(S0, S)
return(S)
}
T < − 20/52 K < − 52
r < − .01
S0 < − 52
##parameters sig < − .4
T <- 20/52 K < − 52
r <- .01
S0 <- 52
##R program ## no of simulation n < − 10000
## simulates n paths with dt = 4/52 sim < − simulateS(S0,r,sig,4/52,T,n)
##picks out the maximum of each path mx < − apply(sim,2,max)
##Calculate option price
c <- mean(pmax(mx-K,0)*exp(-r*T))
##R program ## no of simulation n < − 10000
## simulates n paths with dt = 4/52 sim < − simulateS(S0,r,sig,4/52,T,n)
##picks out the maximum of each path mx < − apply(sim,2,max)
##Calculate option price
c <-mean(pmax(mx-K,0)*exp(-r*T))
#R code (can be used to solve Ex 3 a)
##Function
##Simulates n paths wth dt=h
simulateS < − function(S0, r, sigma, h, T, n) {
t <- seq(h, T, by = h)
## No of points in each path
m <- length(t)
e <- matrix(exp((r - 0.5 * sigmaˆ2) * h + sigma * sqrt(h) *rnorm(n * m)), m, n)
S <- apply(e, 2, cumprod)
S <-S * S0
S <- rbind(S0, S)
return(S)
}
##parameters sig < − .4
T <-20/52 K < − 52
r <-.01
S0 <- 52
##R program ## no of simulation n < − 10000
## simulates n paths with dt = 4/52
sim <- simulateS(S0,r,sig,4/52,T,n)
##picks out the maximum of each path
mx <- apply(sim,2,max)
##Calculate option price
c <-mean(pmax(mx-K,0)*exp(-r*T))
##picks out the maximum of each path
mx <- apply(sim,2,max)
##R program ## no of simulation n < − 10000
## simulates n paths with dt = 4/52
sim <- simulateS(S0,r,sig,4/52,T,n)
##R program ## no of simulation n < − 10000
## simulates n paths with dt = 4/52
sim <- simulate(S0,r,sig,4/52,T,n)
#R code (can be used to solve Ex 3 a)
##Function
##Simulates n paths wth dt=h
simulate < − function(S0, r, sigma, h, T, n) {
t <- seq(h, T, by = h)
## No of points in each path
m <- length(t)
e <- matrix(exp((r - 0.5 * sigmaˆ2) * h + sigma * sqrt(h) *rnorm(n * m)), m, n)
S <- apply(e, 2, cumprod)
S <-S * S0
S <- rbind(S0, S)
return(S)
}
#R code (can be used to solve Ex 3 a)
##Function
##Simulates n paths wth dt=h
simulateS < − function(S0, r, sigma, h, T, n) {
t <- seq(h, T, by = h)
## No of points in each path
m <- length(t)
e <- matrix(exp((r - 0.5 * sigmaˆ2) * h + sigma * sqrt(h) *rnorm(n * m)), m, n)
S <- apply(e, 2, cumprod)
S <-S * S0
S <- rbind(S0, S)
return(S)
}
#R code (can be used to solve Ex 3 a)
##Function
##Simulates n paths wth dt=h
simulateS < − function(S0, r, sigma, h, T, n) {
t <- seq(h, T, by = h)
## No of points in each path
m <- length(t)
e <- matrix(exp((r - 0.5 * sigmaˆ2) * h + sigma * sqrt(h) *rnorm(n * m)), m, n)
S <- apply(e, 2, cumprod)
S <-S * S0
S <- rbind(S0, S)
return(S)
}
##parameters sig < − .4
Time <-20/52 K < − 52
library(tidyverse)
library(readxl)
library(writexl)
# Set the directory where the 10-K filings are stored
setwd("path/to/10k/filings/")
# Get a list of all the 10-K filings in the directory
filings <- list.files(pattern = "10k")
plastic <- read_csv("data-plastic.csv")
Plot1 <- plastic %>%
transmute(GDP=log(gdp),
per_capita_mismanaged=log(per_capita_mismanaged))
library(readr)
library(dplyr)
library(ggplot2)
library(gghighlight)
plastic <- read_csv("data-plastic.csv")
Plot1 <- plastic %>%
transmute(GDP=log(gdp),
per_capita_mismanaged=log(per_capita_mismanaged))
plastic %>%
ggplot(aes(x = log(gdp), y=log(per_capita_mismanaged)))+
geom_point()+
xlab("log(gdp)")+
ylab("log(per_capita_mismanaged")
library(ggplot2)
plastic %>%
ggplot(aes(x = log(gdp), y = log(per_capita_mismanaged), color = region, size = population)) +
geom_point(alpha = 0.6) +  # Added alpha for better visualization with overlapping points
scale_size_continuous(range = c(2, 20)) +  # Adjusting size range of points for better visualization
labs(
x = "Per Capita GDPm(log)",
y = "Per Capita mismanaged plastic waste (kg/day,log)",
color = "Continent",
size = "Country Size"
)
simulate_sample_mean <- function(N, mu = 0, sigma = 1) {
# Simulating N observations from a normal distribution
sample_data <- rnorm(N, mean = mu, sd = sigma)
# Returning the sample mean
return(mean(sample_data))
}
# Testing the function
simulate_sample_mean(1000)  # This will use default mu = 0 and sigma = 1
# Define M and create an empty vector of length M
M <- 20
sample_means <- numeric(M)  # This creates a vector filled with zeros
# Use a for-loop to fill the vector with sample means
sample_size <- 100  # You can change this as desired
for (i in 1:M) {
sample_means[i] <- simulate_sample_mean(sample_size)
}
# Display the resulting vector of sample means
print(sample_means)
# Define M and create an empty vector of length M
M <- 20
sample_means <- numeric(M)  # This creates a vector filled with zeros
# Use a for-loop to fill the vector with sample means
sample_size <- 10  # You can change this as desired
for (i in 1:M) {
sample_means[i] <- simulate_sample_mean(sample_size)
}
# Display the resulting vector of sample means
print(sample_means)
calculated_sd <- sd(sample_means)
theoretical_sd <- 1 / sqrt(sample_size)
print(paste("Calculated standard deviation: ", calculated_sd))
print(paste("Theoretical standard deviation: ", theoretical_sd))
setwd("~/git_lesson")
rm(list=ls())
> setwd("~/git_lesson")#--------- Problem 1 -------
setwd("~/git_lesson")#--------- Problem 1 -------
setwd("/Users/jameshaugen/Documents/git_lesson")
x <- norm(1000)
x <- rnorm(1000)
y <- rnorm(1000)
